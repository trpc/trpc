{
  "parser": "@typescript-eslint/parser", // Specifies the ESLint parser
  "extends": [
    "plugin:@typescript-eslint/recommended-type-checked",
    "plugin:@typescript-eslint/stylistic-type-checked",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended"
  ],
  "reportUnusedDisableDirectives": true,
  "parserOptions": {
    "project": "tsconfig.json",
    "ecmaVersion": 2018, // Allows for the parsing of modern ECMAScript features
    "sourceType": "module" // Allows for the use of imports,
  },
  "rules": {
    // Place to specify ESLint rules. Can be used to overwrite rules specified from the extended configs
    "@typescript-eslint/consistent-type-definitions": "off",
    "react/react-in-jsx-scope": "off",
    "react/prop-types": "off",

    // Consider removing these rule disables for more type safety in your app âœ¨
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/no-floating-promises": "off",
    "@typescript-eslint/no-misused-promises": "off",
    "@typescript-eslint/no-unsafe-assignment": "off",
    "@typescript-eslint/no-unsafe-argument": "off",
    "@typescript-eslint/no-unsafe-call": "off",
    "@typescript-eslint/no-unsafe-return": "off",
    "@typescript-eslint/no-unsafe-member-access": "off",
    "@typescript-eslint/require-await": "off"
  },
  // "overrides": [
  //   {
  //     "files": [],
  //     "rules": {
  //       "@typescript-eslint/no-unused-vars": "off"
  //     }
  //   }
  // ],
  "settings": {
    "react": {
      "version": "detect"
    }
  }
}
